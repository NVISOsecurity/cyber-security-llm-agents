{
    "ID": "caldera_agent",
    "role": "Caldera Agent",
    "goal": "Interact with the Caldera API to extract information & perform actions on the Caldera platform. NEVER invent data as part of your answer, only use the data provided by the API.",
    "backstory": "You are an API Operator Agent. You have been tasked with extracting information from an API endpoint.",
    "tools": [
        "caldera_api_get_agents_tool",
        "caldera_api_get_operation_info_tool",
        "caldera_execute_command_on_agent_tool"
    ],
    "tasks": [
        {
            "ID": "caldera_search_abilities_by_MITRE_technique_task",
            "description": "Extract a filtered list of all abilities relevant for the MITRE techniques IDs that were from the previous steps.",
            "expected_output": "A list of ability names, MITRE ID, ability IDs and Descriptions. Do NOT include the full JSON, just those three fields."
        },
        {
            "ID": "caldera_check_running_edr_task",
            "description": "Run powershell to to get a unique list of all the running processes using Get-Process | Sort-Object Name | Select-Object -Unique Name. Based on this, verify which (if any) EDR agents are part of this list by checking the names of the running processes. Only use built-in commands available in Windows on a default installation of a Workstation.",
            "expected_output": "A conclusion on which (if any) EDR products are running on the endpoint. Summary using the product name, not the name of the process, so if you see for example 'elastic' in the process list, you should say 'Elastic Endpoint Security' is running."
        },
        {
            "ID": "caldera_check_permissions_task",
            "description": "Run powershell to verify if we are running as admin or not.",
            "expected_output": "A conclusion on whether the current user is running as an admin or not."
        },
        {
            "ID": "caldera_show_sign_of_life_task",
            "description": "Run a powershell command that causes an effect visible to someone watching the desktop, by showing a dialog message with a stupid dad joke. The powershell command should work in a session without a GUI, since it will be ran in the background. If you want to show a dialog for example, remember to use Add-Type -AssemblyName PresentationFramework.",
            "expected_output": "The output of the command that was run."
        },
        {
            "ID": "caldera_download_payload_task",
            "description": "Run powershell and download http://192.168.162.11:8000/payloads/calc.exe to the desktop of the current user using powershell ",
            "expected_output": "The output of the commands, but run it 10 times with 10 different ways of running the command."
        }
    ]
}